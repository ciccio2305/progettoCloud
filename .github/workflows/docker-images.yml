name: dockerimage
run-name: Docker Image Push

on:
  push:
    branches:
      - main

jobs:

  svelte-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies for Svelte frontend
      working-directory: ./Svelte Frontend
      run: npm install --legacy-peer-deps

    - name: Build Svelte frontend
      working-directory: ./Svelte Frontend
      run: npm run build --legacy-peer-deps

    - name: Create Python build folder if it doesn't exist
      run: mkdir -p "./Server Python/build/"
    
    - name: Clean Python build folder
      run: |
        rm -rf "./Server Python/build/*"

    - name: Move build output to Python folder
      run: |
        mv ./Svelte\ Frontend/build/* ./Server\ Python/build/

  build-and-push:
    runs-on: ubuntu-latest
    needs: svelte-build
    strategy:
      matrix:

        image_pad:
          - name: etherpad
            context: ./etherpad-lite/
            tag: ciccio2305/justsmartetherpad:latest
        image_mongo:
          - name: mongo
            context: ./mongo/
            tag: ciccio2305/justsmartmongo:latest
        image_server:
          - name: server
            context: ./Server\ Python/
            tag: ciccio2305/justsmartserver1:latest
        image_tinode:
          - name: tinode
            context: ./tinode/
            tag: ciccio2305/justsmarttinode1:latest


    #---------------------------------#
    #   Build and Push Docker Image   #
    #   on the DockerHub Registry     #
    #---------------------------------#

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image mongo
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ matrix.image_mongo.tag }}
          context: ${{ matrix.image_mongo.context }}
          push: true

      - name: Build and Push Docker Image etherpad
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ matrix.image_pad.tag }}
          context: ${{ matrix.image_pad.context }}
          push: true


      - name: Build and Push Docker Image server
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ matrix.image_server.tag }}
          context: ${{ matrix.image_server.context }}
          push: true

      - name: Build and Push Docker Image tinode
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ matrix.image_tinode.tag }}
          context: ${{ matrix.image_tinode.context }}
          push: true
