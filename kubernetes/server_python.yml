#kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    node.type: python-server
  name: python-server
spec:
  replicas: 1 # Numero iniziale di repliche (HPA modificher√† dinamicamente questo valore)
  selector:
    matchLabels:
      app: just-smart
  template:
    metadata:
      labels:
        app: just-smart
    spec:
      containers:
        - name: python-server
          image: ciccio2305/justsmartserver1:latest
          ports:
            - containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    es.service: python-server-service
  name: python-server-service
spec:
  ports:
    - name: "http"
      port: 5000
      nodePort: 30000
  selector:
    app: just-smart
  type: NodePort


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: python-server-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: python-server
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50  # Scala quando l'utilizzo medio della CPU supera il 50%
